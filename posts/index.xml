<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - 蜷缩的蜗牛</title><link>https://www.alongparty.cn/posts/</link><description>所有文章 | 蜷缩的蜗牛</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>kbsonlong@gmail.com (kbsonlong)</managingEditor><webMaster>kbsonlong@gmail.com (kbsonlong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 27 Jun 2023 17:53:20 +0800</lastBuildDate><atom:link href="https://www.alongparty.cn/posts/" rel="self" type="application/rss+xml"/><item><title>Loki配置解析</title><link>https://www.alongparty.cn/posts/839f7c/</link><pubDate>Tue, 27 Jun 2023 17:53:20 +0800</pubDate><author>kbsonlong</author><guid>https://www.alongparty.cn/posts/839f7c/</guid><description>Loki 可配置内容较多，相对复杂。本文通过分析 Loki 默认配置文件来了解一下。 默认配置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33</description></item><item><title>源码剖析：KEDA是如何工作的?</title><link>https://www.alongparty.cn/posts/ea3024/</link><pubDate>Sun, 25 Jun 2023 16:47:47 +0800</pubDate><author>kbsonlong</author><guid>https://www.alongparty.cn/posts/ea3024/</guid><description>KEDA 在2020年11月4号release了2.0版本，包含了一些新的比较有用的特性，比如ScaledObject/ScaledJob中支持多触</description></item><item><title>使用Shell实现Operaror</title><link>https://www.alongparty.cn/posts/12b628/</link><pubDate>Mon, 19 Jun 2023 18:07:34 +0800</pubDate><author>kbsonlong</author><guid>https://www.alongparty.cn/posts/12b628/</guid><description><![CDATA[<p></p>
<p><a
  href="https://github.com/flant/shell-operator#kubernetes"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>Shell Operator</a> 是个冷僻又有点用的东西。方便运维监听kubernetes事件，并基于这些事件做一些简单任务处理；并且shell语言基本上大部分运维人员都懂，而不需要太高的学习成本。</p>
<h2 id="运行原理">运行原理</h2>
<p><code>shell-operator</code> 部署在 <code>Pod</code> 中。在 <code>Pod</code> 中有一个 <code>/hooks</code> 的一个子目录，其中存储了可执行文件，它们可以用 Bash、Python、Ruby等编写的，我们称这些可执行文件为hooks。<code>Shell-opeator</code> 订阅 <code>Kubernetes</code> 事件并执行这些钩子来响应我们感兴趣的事件。</p>]]></description></item><item><title>Loki快速使用</title><link>https://www.alongparty.cn/posts/81200000/</link><pubDate>Thu, 15 Jun 2023 13:25:52 +0800</pubDate><author>kbsonlong</author><guid>https://www.alongparty.cn/posts/81200000/</guid><description><![CDATA[<h1 id="轻量日志采集loki快速入门">轻量日志采集Loki快速入门</h1>
<h2 id="安装-loki">安装 <code>Loki</code></h2>
<h3 id="添加-helm-仓库">添加 <code>Helm</code> 仓库</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">helm repo add grafana https://grafana.github.io/helm-charts
</span></span><span class="line"><span class="cl">helm repo update
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Loki系统架构</title><link>https://www.alongparty.cn/posts/c7c7b8/</link><pubDate>Thu, 15 Jun 2023 13:24:56 +0800</pubDate><author>kbsonlong</author><guid>https://www.alongparty.cn/posts/c7c7b8/</guid><description>&lt;h1 id="loki-系统架构">Loki 系统架构&lt;/h1>
&lt;p>&lt;/p></description></item><item><title>源码分析 kubernetes hpa controller 水平自动扩缩容的实现原理</title><link>https://www.alongparty.cn/posts/32dd44/</link><pubDate>Tue, 18 Apr 2023 23:05:14 +0800</pubDate><author>kbsonlong</author><guid>https://www.alongparty.cn/posts/32dd44/</guid><description>源码分析 kubernetes hpa controller 水平自动扩缩容的实现原理 基于 kubernetes v1.27.0 版本进行 hpa 源码分析. Kubernetes 的 HorizontalPodAutoscaler (hpa) 组件可以根据目标的资源使用率 (cpu, mem 等等), 动态的资源对象进行的合理扩</description></item><item><title>源码分析 kubernetes scheduler 核心调度器的实现原理</title><link>https://www.alongparty.cn/posts/a3f5fa/</link><pubDate>Tue, 18 Apr 2023 21:53:59 +0800</pubDate><author>kbsonlong</author><guid>https://www.alongparty.cn/posts/a3f5fa/</guid><description>基于 kubernetes v1.27.0 源码分析 scheduler 调度器 k8s scheduler 的主要职责是为新创建的 pod 寻找一个最合适的 node 节点, 然后进行 bind node 绑定, 后面 kubelet 才会监听到并创建真正的 pod. 那么问题来了, 如</description></item><item><title>深入Istio系列 - Envoy配置分析</title><link>https://www.alongparty.cn/posts/18798d/</link><pubDate>Tue, 28 Mar 2023 15:10:12 +0800</pubDate><author>kbsonlong</author><guid>https://www.alongparty.cn/posts/18798d/</guid><description><![CDATA[<h1 id="envoy-初始化配置文件">Envoy 初始化配置文件</h1>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">kubectl <span class="nb">exec</span> -ti productpage-v1-d4f8dfd97-p8xlb -c istio-proxy -- cat /etc/istio/proxy/envoy-rev.json
</span></span></code></pre></td></tr></table>
</div>
</div><p>配置文件结构</p>
<p></p>]]></description></item><item><title>Istio Proxy Access日志</title><link>https://www.alongparty.cn/posts/5a662f/</link><pubDate>Fri, 17 Mar 2023 13:57:26 +0800</pubDate><author>kbsonlong</author><guid>https://www.alongparty.cn/posts/5a662f/</guid><description><![CDATA[开启 Access 日志 1 2 3 4 5 6 7 8 9 10 apiVersion: v1 kind: ConfigMap metadata: name: istio namespace: istio-system data: mesh: | accessLogEncoding: JSON accessLogFile: /dev/stdout accessLogFormat: &#34;&#34; 格式化 Access 日志 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 { &#34;authority&#34;: &#34;%REQ(:AUTHORITY)%&#34;, &#34;bytes_received&#34;: &#34;%BYTES_RECEIVED%&#34;, &#34;bytes_sent&#34;:]]></description></item><item><title>如何选择最佳的Kubernetes集群自动伸缩策略</title><link>https://www.alongparty.cn/posts/a18401/</link><pubDate>Thu, 16 Mar 2023 14:55:47 +0800</pubDate><author>kbsonlong</author><guid>https://www.alongparty.cn/posts/a18401/</guid><description>前言 这篇内容篇幅比较长，如果不想深入探讨或时间有限，这是全文简述： 在默认设置下，扩展 Kubernetes 集群中的 pod 和节点可能需要几分钟时间。 了解如何调整集群节</description></item></channel></rss>