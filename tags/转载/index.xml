<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>转载 - 标签 - 蜷缩的蜗牛</title><link>https://www.kbsonlong.com/sre/tags/%E8%BD%AC%E8%BD%BD/</link><description>转载 - 标签 - 蜷缩的蜗牛</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>kbsonlong@gmail.com (kbsonlong)</managingEditor><webMaster>kbsonlong@gmail.com (kbsonlong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 18 Apr 2023 23:05:14 +0800</lastBuildDate><atom:link href="https://www.kbsonlong.com/sre/tags/%E8%BD%AC%E8%BD%BD/" rel="self" type="application/rss+xml"/><item><title>源码分析 kubernetes hpa controller 水平自动扩缩容的实现原理</title><link>https://www.kbsonlong.com/sre/posts/source-code-analysis-kubernetes-hpa-controller-horizontal-automatic-expansion-principles/</link><pubDate>Tue, 18 Apr 2023 23:05:14 +0800</pubDate><author>kbsonlong</author><guid>https://www.kbsonlong.com/sre/posts/source-code-analysis-kubernetes-hpa-controller-horizontal-automatic-expansion-principles/</guid><description>源码分析 kubernetes hpa controller 水平自动扩缩容的实现原理 基于 kubernetes v1.27.0 版本进行 hpa 源码分析. Kubernetes 的 HorizontalPodAutoscaler (hpa) 组件可以根据目标的资源使用率 (cpu, mem 等等), 动态的资源对象进行的合理扩</description></item><item><title>Grafana Mimir 和 VictoriaMetrics 之间的性能测试</title><link>https://www.kbsonlong.com/sre/posts/performance-tests-between-grafana-mimir-and-victoriametrics/</link><pubDate>Wed, 14 Sep 2022 12:20:51 +0800</pubDate><author>kbsonlong</author><guid>https://www.kbsonlong.com/sre/posts/performance-tests-between-grafana-mimir-and-victoriametrics/</guid><description>Grafana 实验室的 Mimir 是一个在 AGPLv3 许可下新的时间序列数据库，该工程团队从 Cortex TSDB 中汲取精华，同时降低了复杂性并提高了可扩展性。 根据 Grafana 实验室的测试，Mimir</description></item><item><title>Istio性能指标</title><link>https://www.kbsonlong.com/sre/posts/istio-performance-index/</link><pubDate>Tue, 13 Sep 2022 10:56:21 +0800</pubDate><author>kbsonlong</author><guid>https://www.kbsonlong.com/sre/posts/istio-performance-index/</guid><description><![CDATA[<h1 id="istio-指标">Istio 指标</h1>
<h2 id="istio-自己的-metrics">Istio 自己的 Metrics</h2>
<h3 id="标准指标说明">标准指标说明</h3>
<blockquote>
<p>参考：https://istio.io/latest/docs/reference/config/metrics/</p>
</blockquote>
<h4 id="metrics">Metrics</h4>
<p>对于 HTTP、HTTP/2 和 GRPC 流量，Istio 默认生成以下指标：</p>
<ul>
<li><strong>Request Count</strong> (<code>istio_requests_total</code>): This is a <code>COUNTER</code> incremented for every request handled by an Istio proxy.</li>
<li><strong>Request Duration</strong> (<code>istio_request_duration_milliseconds</code>): This is a <code>DISTRIBUTION</code> which measures the duration of requests.</li>
<li><strong>Request Size</strong> (<code>istio_request_bytes</code>): This is a <code>DISTRIBUTION</code> which measures HTTP request body sizes.</li>
<li><strong>Response Size</strong> (<code>istio_response_bytes</code>): This is a <code>DISTRIBUTION</code> which measures HTTP response body sizes.</li>
<li><strong>gRPC Request Message Count</strong> (<code>istio_request_messages_total</code>): This is a <code>COUNTER</code> incremented for every gRPC message sent from a client.</li>
<li><strong>gRPC Response Message Count</strong> (<code>istio_response_messages_total</code>): This is a <code>COUNTER</code> incremented for every gRPC message sent from a server.</li>
</ul>]]></description></item><item><title>Envoy性能指标</title><link>https://www.kbsonlong.com/sre/posts/envoy-performance-index/</link><pubDate>Tue, 13 Sep 2022 10:46:39 +0800</pubDate><author>kbsonlong</author><guid>https://www.kbsonlong.com/sre/posts/envoy-performance-index/</guid><description><![CDATA[<h1 id="envoy-指标">Envoy 指标</h1>
<h2 id="envoy-指标概述">Envoy 指标概述</h2>
<p>Envoy 的主要目标之一是使网络易于理解。 Envoy 会根据其配置方式产生大量统计信息。一般来说，统计数据(指标)分为三类：</p>
<ul>
<li><strong>Downstream</strong>：Downstream 指标与外来的连接/请求有关。它们由 <code>listener</code>、<code>HTTP connection manager(HCM)</code>、<code>TCP proxy filter</code> 等产生。</li>
<li><strong>Upstream</strong>：Upstream 指标与外向的连接/请求有关。它们由 <code>connection pool</code>、<code>router filter</code>、<code>tcp proxy filter</code>等产生。</li>
<li><strong>Server</strong>：<code>Server</code> 指标信息描述 Envoy 服务器实例的运作情况。服务器正常运行时间或分配的内存量等统计信息。</li>
</ul>
<p>在最简单场景下，单个 Envoy Proxy 通常涉及 <code>Downstream</code> 和 <code>Upstream</code> 统计数据。这两种指标反映了取该 <code>网络节点</code> 的运行情况。来自整个网格的统计数据提供了每个<code> 网络节点</code> 和整体网络健康状况的非常详细的汇总信息。Envoy 的文档对这些指标有一些简单的说明。</p>]]></description></item><item><title>Istio组件详解</title><link>https://www.kbsonlong.com/sre/posts/istio-component-detailed-explanation/</link><pubDate>Mon, 12 Sep 2022 08:19:28 +0800</pubDate><author>kbsonlong</author><guid>https://www.kbsonlong.com/sre/posts/istio-component-detailed-explanation/</guid><description>在前两篇博客中： Istio 中的 Sidecar 注入、透明流量劫持及流量路由过程详解 Sidecar 中的流量类型及 iptables 规则详解 我向你详细介绍了 Istio 数据平面中的流量，但数据平面并不能孤</description></item><item><title>Sidecar 中的流量类型及 iptables 规则详解</title><link>https://www.kbsonlong.com/sre/posts/detailed-explanation-of-traffic-types-in-sidecar-and-iptables/</link><pubDate>Sun, 11 Sep 2022 14:56:39 +0800</pubDate><author>kbsonlong</author><guid>https://www.kbsonlong.com/sre/posts/detailed-explanation-of-traffic-types-in-sidecar-and-iptables/</guid><description>我在之前的一篇博客中讲解过 Istio 中 sidecar 的注入、使用 iptables 进行透明流量拦截及流量路由的详细过程，并以 Bookinfo 示例中的 productpage 服务访问 reviews 服务，和 reviews 服务访问 ratings 服务为例绘</description></item><item><title>Istio 中的 Sidecar 注入、透明流量劫持及流量路由过程详解</title><link>https://www.kbsonlong.com/sre/posts/detailed-explanation-of-sidecar-injection-transparent-flow-hijacking-and-traffic-route-in-istio/</link><pubDate>Sun, 11 Sep 2022 14:26:02 +0800</pubDate><author>kbsonlong</author><guid>https://www.kbsonlong.com/sre/posts/detailed-explanation-of-sidecar-injection-transparent-flow-hijacking-and-traffic-route-in-istio/</guid><description>本文最早是基于 Istio 1.11 撰写，之后随着 Istio 的版本陆续更新，最新更新时间为 2022 年 5 月 12 日，关于本文历史版本的更新说明请见文章最后。本文记录了详细的实践过</description></item><item><title>Istio 数据平面Pod启动过程详解</title><link>https://www.kbsonlong.com/sre/posts/detailed-explanation/</link><pubDate>Sat, 10 Sep 2022 14:33:42 +0800</pubDate><author>kbsonlong</author><guid>https://www.kbsonlong.com/sre/posts/detailed-explanation/</guid><description>本文将为你讲解： Istio 中 sidecar 自动注入过程 Istio 中的 init 容器启动过程 启用了 Sidecar 自动注入的 Pod 的启动流程 下图中展示了 Istio 数据平面中的 Pod 启动完后的组件。 Istio 中的 sidecar 注入</description></item><item><title>理解Iptable</title><link>https://www.kbsonlong.com/sre/posts/understanding-iptable/</link><pubDate>Sat, 10 Sep 2022 14:30:05 +0800</pubDate><author>kbsonlong</author><guid>https://www.kbsonlong.com/sre/posts/understanding-iptable/</guid><description>iptables 作为 Linux 内核中的重要功能，有着广泛的应用，在 Istio 中默认就是利用 iptables 做透明流量劫持的。理解 iptables，对于我们理解 Istio 的运作有十分重要的作用。</description></item><item><title>企业级弹性伸缩和优化建设</title><link>https://www.kbsonlong.com/sre/posts/enterprise--level-elastic-telescopic-and-optimization-construction/</link><pubDate>Mon, 01 Aug 2022 09:54:52 +0800</pubDate><author>kbsonlong</author><guid>https://www.kbsonlong.com/sre/posts/enterprise--level-elastic-telescopic-and-optimization-construction/</guid><description><![CDATA[<p>什么是弹性伸缩？弹性伸缩和成本优化是何关系？ 应该如何做好企业级弹性伸缩与成本优化建设？</p>
<h2 id="一-背景">一 背景</h2>
<p>传统意义上来讲，弹性伸缩主要解决的问题是容量规划与实际负载的矛盾, 这矛盾通常因为资源使用普遍具有以下几个问题导致：</p>
<blockquote>
<p>（1）在线服务申请资源时考虑到突发流量和服务稳定性，预留大量的 buffer 资源，造成资源申请量普遍远超实际使用量。</p>
</blockquote>
<blockquote>
<p>（2）大部分在线服务的潮汐现象、波峰波谷特征非常明显，保留过多常态资源造成巨大浪费。</p>
</blockquote>
<blockquote>
<p>（3）开发和运维评估和配置的资源规格不合理，并且动态更新不及时。</p>
</blockquote>]]></description></item></channel></rss>