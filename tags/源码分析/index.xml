<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>源码分析 - 标签 - 蜷缩的蜗牛</title><link>https://kbsonlong.github.io/sre/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link><description>源码分析 - 标签 - 蜷缩的蜗牛</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>kbsonlong@gmail.com (kbsonlong)</managingEditor><webMaster>kbsonlong@gmail.com (kbsonlong)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 28 Jul 2023 17:19:10 +0800</lastBuildDate><atom:link href="https://kbsonlong.github.io/sre/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/" rel="self" type="application/rss+xml"/><item><title>02-kube-controller-manager源码分析(主流程)</title><link>https://kbsonlong.github.io/sre/posts/c1cfca/</link><pubDate>Fri, 28 Jul 2023 17:19:10 +0800</pubDate><author>kbsonlong</author><guid>https://kbsonlong.github.io/sre/posts/c1cfca/</guid><description><![CDATA[<p>本文基于<a
  href="https://github.com/kubernetes/kubernetes/tree/v1.29.0"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>1.29.0</a>版本</p>
<p>本文主要分析 kubernetes/cmd/kube-controller-manager 部分，该部分主要涉及各种类型的controller的参数解析，及初始化，例如 deployment controller 和statefulset controller。</p>
<h2 id="代码结构">代码结构</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">tree  cmd/kube-controller-manager 
</span></span><span class="line"><span class="cl">cmd/kube-controller-manager
</span></span><span class="line"><span class="cl">├── OWNERS
</span></span><span class="line"><span class="cl">├── app
</span></span><span class="line"><span class="cl">│   ├── apps.go <span class="c1"># 包含:startDeploymentController、startReplicaSetController、startStatefulSetController、startDaemonSetController</span>
</span></span><span class="line"><span class="cl">│   ├── autoscaling.go <span class="c1"># startHPAController</span>
</span></span><span class="line"><span class="cl">│   ├── batch.go
</span></span><span class="line"><span class="cl">│   ├── bootstrap.go
</span></span><span class="line"><span class="cl">│   ├── certificates.go
</span></span><span class="line"><span class="cl">│   ├── certificates_test.go
</span></span><span class="line"><span class="cl">│   ├── cloudproviders.go
</span></span><span class="line"><span class="cl">│   ├── config  <span class="c1"># config: controller manager执行的上下文</span>
</span></span><span class="line"><span class="cl">│   │   └── config.go
</span></span><span class="line"><span class="cl">│   ├── controllermanager.go
</span></span><span class="line"><span class="cl">│   ├── controllermanager_test.go
</span></span><span class="line"><span class="cl">│   ├── core.go
</span></span><span class="line"><span class="cl">│   ├── core_test.go
</span></span><span class="line"><span class="cl">│   ├── discovery.go
</span></span><span class="line"><span class="cl">│   ├── flags_providerless.go
</span></span><span class="line"><span class="cl">│   ├── flags_providers.go
</span></span><span class="line"><span class="cl">│   ├── import_known_versions.go
</span></span><span class="line"><span class="cl">│   ├── networking.go
</span></span><span class="line"><span class="cl">│   ├── options   <span class="c1"># 包含不同controller的option参数</span>
</span></span><span class="line"><span class="cl">│   │   ├── attachdetachcontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── cronjobcontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── csrsigningcontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── daemonsetcontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── deploymentcontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── deprecatedcontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── endpointcontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── endpointslicecontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── endpointslicemirroringcontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── ephemeralcontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── garbagecollectorcontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── hpacontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── jobcontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── legacyserviceaccounttokencleaner.go
</span></span><span class="line"><span class="cl">│   │   ├── namespacecontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── nodeipamcontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── nodelifecyclecontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── options.go
</span></span><span class="line"><span class="cl">│   │   ├── options_test.go
</span></span><span class="line"><span class="cl">│   │   ├── persistentvolumebindercontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── podgccontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── replicasetcontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── replicationcontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── resourcequotacontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── serviceaccountcontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── statefulsetcontroller.go
</span></span><span class="line"><span class="cl">│   │   ├── ttlafterfinishedcontroller.go
</span></span><span class="line"><span class="cl">│   │   └── validatingadmissionpolicycontroller.go
</span></span><span class="line"><span class="cl">│   ├── plugins.go
</span></span><span class="line"><span class="cl">│   ├── plugins_providerless.go
</span></span><span class="line"><span class="cl">│   ├── plugins_providers.go
</span></span><span class="line"><span class="cl">│   ├── policy.go
</span></span><span class="line"><span class="cl">│   ├── rbac.go
</span></span><span class="line"><span class="cl">│   ├── testing
</span></span><span class="line"><span class="cl">│   │   └── testserver.go
</span></span><span class="line"><span class="cl">│   └── validatingadmissionpolicystatus.go
</span></span><span class="line"><span class="cl">├── controller-manager.go   <span class="c1"># main入口函数</span>
</span></span><span class="line"><span class="cl">└── names
</span></span><span class="line"><span class="cl">    └── controller_names.go
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="m">5</span> directories, <span class="m">55</span> files
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>01-利用vscode与kind搭建kubernetes开发环境</title><link>https://kbsonlong.github.io/sre/posts/44f039/</link><pubDate>Fri, 07 Jul 2023 16:50:30 +0800</pubDate><author>kbsonlong</author><guid>https://kbsonlong.github.io/sre/posts/44f039/</guid><description><![CDATA[<p>本文基于<a
  href="https://github.com/kubernetes/kubernetes/tree/v1.27.0"
  
  
    
    
    target="_blank"
  
  
    rel="external nofollow noopener noreferrer"
  
  
  
>1.27.0</a>版本</p>
<h2 id="kind-创建集群">Kind 创建集群</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="l">cat &lt;&lt; EOF &gt; dev.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">Cluster</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;kind.x-k8s.io/v1alpha4&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kubeadmConfigPatches</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">  apiVersion: kubeadm.k8s.io/v1beta1
</span></span></span><span class="line"><span class="cl"><span class="sd">  kind: ClusterConfiguration
</span></span></span><span class="line"><span class="cl"><span class="sd">  metadata:
</span></span></span><span class="line"><span class="cl"><span class="sd">    name: dev
</span></span></span><span class="line"><span class="cl"><span class="sd">  imageRepository: registry.aliyuncs.com/google_containers</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">networking</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">podSubnet</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;10.8.0.0/16&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">serviceSubnet</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;10.9.0.0/16&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">nodes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">role</span><span class="p">:</span><span class="w"> </span><span class="l">control-plane</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">kindest/node:v1.27.0@sha256:c6b22e613523b1af67d4bc8a0c38a4c3ea3a2b8fbc5b367ae36345c9cb844518</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">extraPortMappings</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">containerPort</span><span class="p">:</span><span class="w"> </span><span class="m">2379</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">hostPort</span><span class="p">:</span><span class="w"> </span><span class="m">2379</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">protocol</span><span class="p">:</span><span class="w"> </span><span class="l">TCP</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">EOF</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">kind create cluster --name dev --config=dev.yaml</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>源码分析 kubernetes scheduler 核心调度器的实现原理</title><link>https://kbsonlong.github.io/sre/posts/a3f5fa/</link><pubDate>Tue, 18 Apr 2023 21:53:59 +0800</pubDate><author>kbsonlong</author><guid>https://kbsonlong.github.io/sre/posts/a3f5fa/</guid><description>基于 kubernetes v1.27.0 源码分析 scheduler 调度器 k8s scheduler 的主要职责是为新创建的 pod 寻找一个最合适的 node 节点, 然后进行 bind node 绑定, 后面 kubelet 才会监听到并创建真正的 pod. 那么问题来了, 如</description></item></channel></rss>